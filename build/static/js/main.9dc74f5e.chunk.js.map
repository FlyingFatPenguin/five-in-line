{"version":3,"sources":["components/block/Block.tsx","components/matrix/index.tsx","components/Board.tsx","util/pos.ts","game/bfs.ts","game/index.ts","page/MainPage.tsx","util/math.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ICON_MAPPING","Block","props","type","active","icon","className","style","Matrix","sizeX","sizeY","Children","children","onClick","range","map","y","x","Board","data","activePos","p","p1","p2","cache","f","store","v","bfs","start","mapping","rank","t","arr","reduce","a","b","_","uniqWith","isEqual","randomInt","upper","Math","floor","random","randomPick","num","len","length","res","tmpArr","i","index","splice","push","allEmptyPoses","board","row","randomPickEmpty","emptyPosList","allLines","cols","rows","nw","filter","ne","console","log","GameBoard","nearBy","nearByCanGo","get","this","fill","pos","val","set","cloneDeep","join","from","target","forceMove","findWay","search","times","some","step","dist","nextStep","reverse","find","posList","xs","last","clearPosList","flatMap","line","getFiveInLine","uniq","value","forEach","remove","sleep","ms","Promise","setTimeout","height","width","display","justifyContent","alignItems","flexGrow","MainPage","update","useState","setS","useCallback","useUpdate","level","game","setActivePos","score","setScore","newBlock","useEffect","add","useBoolean","isMoving","on","off","move","way","clearNum","clearInLine","handleClick","canMove","undefined","flexDirection","clone","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dc74f5e.chunk.js","sourcesContent":["import './Block.css';\r\n\r\n// Â∫èÂè∑‰ªé 1 ÂºÄÂßã\r\nconst ICON_MAPPING = [\r\n    'üêí', //1\r\n    'üê∂',\r\n    'ü¶Ñ',\r\n    'üêò',\r\n    'üê®',\r\n    'üêá',\r\n    'ü¶ò',\r\n    'üêº',\r\n    'üê¶',\r\n]\r\n\r\ninterface Props {\r\n    type?: number;\r\n    active?: boolean;\r\n}\r\n\r\nconst Block: React.FC<Props> = props => {\r\n    const { type, active } = props;\r\n    if (!type) {\r\n        return <></>;\r\n    }\r\n    const icon = ICON_MAPPING[type - 1];\r\n    return <span className={active ? 'active' : ''}>{icon}</span>;\r\n}\r\n\r\nexport default Block","import { range } from 'lodash'\r\nimport './index.css';\r\n\r\nconst style: React.CSSProperties = {\r\n    // display: 'flex',\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n}\r\n\r\ninterface Props {\r\n    sizeX: number;\r\n    sizeY: number;\r\n    children?: (p: { x: number, y: number }) => JSX.Element;\r\n    onClick?: (p: { x: number, y: number }) => void\r\n}\r\n\r\nconst Matrix: React.FC<Props> = props => {\r\n    const { sizeX, sizeY, children: Children, onClick } = props;\r\n\r\n    return <div className='matrix' style={style}>\r\n        {range(sizeY).map(y =>\r\n            <div className='matrix-row' key={y}>\r\n                {\r\n                    range(sizeX).map(x =>\r\n                        <div className='matrix-block' key={x} onClick={() => onClick?.({ x, y })}>\r\n                            {typeof Children === 'function'\r\n                                ? <Children x={x} y={y} />\r\n                                : Children}\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )}\r\n    </div>;\r\n}\r\n\r\nexport default Matrix","import { eqPos, Pos } from \"../util/pos\";\r\nimport Block from \"./block/Block\";\r\nimport Matrix from \"./matrix\";\r\n\r\n\r\ninterface Props {\r\n    data: number[][]\r\n    activePos?: Pos;\r\n    onClick?: (p: Pos) => void\r\n}\r\n\r\nconst Board: React.FC<Props> = props => {\r\n    const { data, onClick, activePos } = props;\r\n    return <>\r\n        <Matrix sizeX={9} sizeY={9} onClick={onClick}>\r\n            {p => {\r\n                const { x, y } = p\r\n                const type = data[y]?.[x]\r\n                const active = activePos ? eqPos(p, activePos) : false;\r\n                return <Block type={type} active={active} />\r\n            }}\r\n        </Matrix>\r\n    </>;\r\n}\r\n\r\nexport default Board","\r\nexport type Pos = { x: number, y: number };\r\n\r\nexport function eqPos(p1: Pos, p2: Pos) {\r\n    return p1.x === p2.x && p1.y === p2.y\r\n}","import _, { isEqual, range } from 'lodash'\r\n\r\nconst cache = <R>(f: (v: number) => R) => {\r\n    const store: Record<number, R> = {};\r\n    return (v: number) => {\r\n        if (v in store) {\r\n            return store[v]\r\n        }\r\n        return store[v] = f(v)\r\n    }\r\n}\r\n\r\nconst unique = <T>(arr: T[]): T[] => {\r\n    return _.uniqWith(arr, _.isEqual)\r\n}\r\n\r\nexport const bfs = <T>(start: T[], mapping: (v: T) => T[]) => {\r\n    const rank = cache((t: number): T[] =>\r\n        t === 0 ?\r\n            start :\r\n            unique([...rank(t - 1).map(mapping).reduce((a, b) => [...a, ...b], []), ...rank(t - 1)]))\r\n    return rank\r\n}\r\n\r\nexport const findWay = <T>(start: T, target: T, mapping: (v: T) => T[]): T[] | undefined => {\r\n    const search = bfs([start], mapping)\r\n\r\n    let times = 1;\r\n    // Âà§Êñ≠ÊòØÂê¶ÂèØËß£\r\n    while (true) {\r\n        if (search(times).length === search(times - 1).length) {\r\n            return;\r\n        }\r\n        if (search(times).some(p => isEqual(p, target))) {\r\n            break;\r\n        }\r\n        times++\r\n    }\r\n    // Êü•ÁúãÁ¨¨ dist Ê≠•Âú®Âì™Èáå\r\n    const step = cache((dist: number): T => {\r\n        if (dist === times) {\r\n            return target\r\n        }\r\n        const nextStep = step(dist + 1)\r\n        return search(dist).reverse().find(v => mapping(v).some(x => isEqual(x, nextStep)))!\r\n    })\r\n    return range(times + 1).map(step)\r\n}","import _, { cloneDeep, range } from \"lodash\"\r\nimport { findWay } from './bfs'\r\n\r\n////////////util\r\nfunction randomInt(upper: number) {\r\n    return Math.floor(Math.random() * upper)\r\n}\r\n\r\nfunction randomPick<T>(arr: T[], num = 1): T[] | undefined {\r\n    const len = arr.length;\r\n    if (len < num) {\r\n        return undefined;\r\n    }\r\n\r\n    const res: T[] = []\r\n    let tmpArr = [...arr];\r\n    for (let i = 0; i < num; i++) {\r\n        const index = randomInt(tmpArr.length)\r\n        const v = tmpArr.splice(index, 1)\r\n        res.push(...v)\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\n////////////\r\ntype BoardData = number[][]\r\ntype Pos = { x: number, y: number }\r\n\r\nfunction emptyBoard() {\r\n    return range(9).map(() => range(9).fill(0))\r\n}\r\n\r\nfunction allEmptyPoses(board: BoardData) {\r\n    const res: Pos[] = []\r\n    for (const y in board) {\r\n        const row = board[y]\r\n        for (const x in row) {\r\n            const v = row[x]\r\n            if (v === 0) {\r\n                res.push({ x: +x, y: +y })\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction randomPickEmpty(board: BoardData, num = 1) {\r\n    const emptyPosList = allEmptyPoses(board);\r\n    return randomPick(emptyPosList, num)\r\n}\r\n\r\n// Ëé∑ÂèñË°®Ê†º‰∏≠ÂÖ®ÈÉ®ÁöÑË°åÂàóÊñúÁ∫ø\r\ntype Line = Pos[]\r\nconst allLines = (() => {\r\n    const cols: Line[] = range(9).map(x => range(9).map(y => ({ x, y })))\r\n    const rows: Line[] = range(9).map(y => range(9).map(x => ({ x, y })))\r\n    const nw: Line[] = range(9).map(x => range(9)\r\n        .map(y => ({ x: y, y: x + y - 4 }))\r\n        .filter(({ y }) => y >= 0 && y < 9))\r\n    const ne: Line[] = range(9).map(x => range(9)\r\n        .map(y => ({ x: y, y: x - y + 4 }))\r\n        .filter(({ y }) => y >= 0 && y < 9))\r\n    console.log(ne)\r\n    return [...cols, ...rows, ...nw, ...ne]\r\n})()\r\n\r\nexport class GameBoard {\r\n    private data: BoardData;\r\n    constructor() {\r\n        this.data = emptyBoard();\r\n    }\r\n    private get(pos: Pos) {\r\n        const { x, y } = pos;\r\n        return (this.data[y] || [])[x];\r\n    }\r\n    private set(pos: Pos, val: number) {\r\n        const { x, y } = pos;\r\n        this.data[y][x] = val\r\n    }\r\n    private remove(pos: Pos) {\r\n        this.set(pos, 0)\r\n    }\r\n    clone() {\r\n        return cloneDeep(this.data);\r\n    }\r\n\r\n    // Â¢ûÂà†\r\n    randomPickEmpty(num = 1) {\r\n        return randomPickEmpty(this.data, num)\r\n    }\r\n    add(pos: Pos, val: number) {\r\n        if (this.get(pos) === 0) {\r\n            this.set(pos, val)\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    show(): string {\r\n        return this.data.map(row => row.join(',')).join('\\n')\r\n    }\r\n\r\n    // ÁßªÂä®\r\n    private forceMove(from: Pos, target: Pos) {\r\n        const v = this.get(from);\r\n        this.set(from, 0)\r\n        this.set(target, v)\r\n    }\r\n    move(from: Pos, target: Pos) {\r\n        this.forceMove(from, target)\r\n    }\r\n    canMove(from: Pos, target: Pos) {\r\n        return this.get(from) && !this.get(target) && this.findWay(from, target);\r\n    }\r\n    private nearBy = (p: Pos) => {\r\n        const { x, y } = p\r\n        return [\r\n            { x: x + 1, y: y },\r\n            { x: x - 1, y: y },\r\n            { x: x, y: y + 1 },\r\n            { x: x, y: y - 1 },\r\n        ]\r\n    }\r\n    private nearByCanGo = (p: Pos) => {\r\n        return this.nearBy(p).filter(v => this.get(v) === 0)\r\n    }\r\n    findWay(from: Pos, target: Pos) {\r\n        return findWay(from, target, v => [v, ...this.nearByCanGo(v)]);\r\n    }\r\n\r\n\r\n    // ËøîÂõûÂ∫èÂàó‰∏≠ËøûÁª≠‰∫î‰∏™‰ª•‰∏äÁöÑËäÇÁÇπ\r\n    private getFiveInLine(posList: Pos[]): Pos[] {\r\n        if (posList.length < 5) {\r\n            return []\r\n        }\r\n        const [x, ...xs] = posList;\r\n        const res: Pos[] = [x]\r\n        for (const p of xs) {\r\n            const last = res[res.length - 1]\r\n            if (this.get(last) !== this.get(p)) {\r\n                if (res.length >= 5) {\r\n                    return res;\r\n                }\r\n                res.length = 0\r\n            }\r\n            res.push(p)\r\n        }\r\n\r\n        if (res.length >= 5) {\r\n            return res;\r\n        }\r\n        return [];\r\n    }\r\n    // Ê∂àÂéª\r\n    clearInLine() {\r\n        const clearPosList = _(allLines)\r\n            .flatMap(line => this.getFiveInLine(line))\r\n            .uniq().value()\r\n            .filter(v => this.get(v))\r\n        clearPosList.forEach(p => this.remove(p))\r\n        return clearPosList.length;\r\n    }\r\n}\r\n\r\n\r\n// function main() {\r\n//     const game = new GameBoard()\r\n//     // const posList = game.randomPickEmpty(60)\r\n//     // posList?.forEach(p => game.add(p, 2))\r\n//     // console.log(game.getFiveInLine(range(9).map(y => ({ x: 0, y }))))\r\n//     // console.log(game.show())\r\n//     console.log(game.findWay({ x: 1, y: 1 }, { x: 3, y: 4 }))\r\n// }\r\n\r\n// main()","import { useBoolean } from \"@huse/boolean\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Board from \"../components/Board\";\r\nimport { GameBoard } from '../game';\r\nimport { randomInt } from \"../util/math\";\r\nimport { Pos } from \"../util/pos\";\r\n\r\nconst sleep = (ms: number) => new Promise(res => setTimeout(res, ms));\r\n\r\nconst style: React.CSSProperties = {\r\n    height: '100vh',\r\n    width: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexGrow: 0\r\n}\r\n\r\nconst useUpdate = () => {\r\n    const [, setS] = useState(0)\r\n    const f = useCallback(() => setS(v => v + 1), [])\r\n    return f;\r\n}\r\n\r\ninterface Props {\r\n}\r\n\r\nconst MainPage: React.FC<Props> = props => {\r\n    const update = useUpdate()\r\n    const [level] = useState(5);\r\n    const [game] = useState(() => new GameBoard())\r\n    const [activePos, setActivePos] = useState<Pos>()\r\n    const [score, setScore] = useState(0);\r\n\r\n    const newBlock = useCallback(() => {\r\n        return randomInt(level - 1) + 1\r\n    }, [level])\r\n\r\n    useEffect(() => {\r\n        game.randomPickEmpty(5)?.forEach(p => game.add(p, newBlock()))\r\n        update()\r\n    }, [game, newBlock, update])\r\n\r\n    const [isMoving, { on, off }] = useBoolean(false);\r\n\r\n    const move = useCallback(async (f: Pos, t: Pos) => {\r\n        const way = game.findWay(f, t);\r\n        if (!way) {\r\n            return\r\n        }\r\n        on()\r\n        let last = f;\r\n        for (const p of way) {\r\n            await sleep(50);\r\n            game.move(last, p);\r\n            last = p\r\n            update()\r\n        }\r\n        const clearNum = game.clearInLine()\r\n        game.randomPickEmpty(3)?.forEach(p => game.add(p, newBlock()))\r\n        console.log(clearNum)\r\n        setScore(v => v + clearNum)\r\n        update()\r\n        off()\r\n    }, [game, newBlock, off, on, update])\r\n\r\n    const handleClick = useCallback((p: Pos) => {\r\n        if (isMoving) {\r\n            return\r\n        }\r\n        if (activePos) {\r\n            if (game.canMove(activePos, p)) {\r\n                move(activePos, p)\r\n            }\r\n            setActivePos(undefined)\r\n            return;\r\n        }\r\n        setActivePos(p)\r\n    }, [activePos, game, isMoving, move])\r\n\r\n    return <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <div style={{ display: 'flex', justifyContent: 'center', flexDirection: 'column' }}>\r\n            <h1>ÂΩìÂâçÂàÜÊï∞{score}</h1>\r\n        </div>\r\n        <div style={style}>\r\n            <Board data={game.clone()} onClick={handleClick} activePos={activePos} />\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default MainPage;","export function randomInt(upper: number) {\r\n    return Math.floor(Math.random() * upper)\r\n}","import './App.css';\nimport MainPage from './page/MainPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}